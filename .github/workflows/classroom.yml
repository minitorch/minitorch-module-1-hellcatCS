name: Autograding Tests
on:
  - workflow_dispatch
  - repository_dispatch
permissions:
  checks: write
  actions: read
  contents: read

jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8==5.0.4 mypy==1.0.0  # Явно указываем совместимые версии

    - name: Install local package (-e .)
      run: |
        pip install -e .

    - name: Linting (Setup)
      id: setup
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Setup
        command: |
          flake8 --ignore="N801,E203,E266,E501,W503,F812,E741,N803,N802,N806" minitorch/ tests/ project/
          mypy minitorch/
        timeout: 10
        max-score: 10

    - name: Task 1.1
      id: task-1-1
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Task 1.1
        command: pytest -m task1_1 -v
        timeout: 10
        max-score: 10

    - name: Task 1.2
      id: task-1-2
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Task 1.2
        command: pytest -m task1_2 -v
        timeout: 10
        max-score: 10

    - name: Task 1.3
      id: task-1-3
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Task 1.3
        command: pytest -m task1_3 -v
        timeout: 10
        max-score: 10

    - name: Task 1.4
      id: task-1-4
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: Task 1.4
        command: pytest -m task1_4 -v
        timeout: 10
        max-score: 10

    - name: Autograding Reporter
      uses: classroom-resources/autograding-grading-reporter@v1
      env:
        SETUP_RESULTS: ${{ steps.setup.outputs.result }}
        TASK-1-1_RESULTS: ${{ steps.task-1-1.outputs.result }}
        TASK-1-2_RESULTS: ${{ steps.task-1-2.outputs.result }}
        TASK-1-3_RESULTS: ${{ steps.task-1-3.outputs.result }}
        TASK-1-4_RESULTS: ${{ steps.task-1-4.outputs.result }}
      with:
        runners: setup,task-1-1,task-1-2,task-1-3,task-1-4